* BUCKET-SORT

Bucket sort assumes that the input is drawn from a uniform distribution
and has an average-case running time of O(n). Like counting sort, bucket
sort is fast because it assumes something about the input. Whereas
counting sort assumes that the input consists of integers in a small
range, bucket sort assumes that the input is generated by a random
process that distributes elements uniformly and independently over the
interval [0,1) (See Section C.2 for a definition of uniform
distribution.)

BUCKET-SORT(A) 1 n = A.length 2 let B[0..n -1] be a new array 3 for i =
0 to n - 1 4 make B[i] an empty list 5 for i = 1 to n 6 insert A[i]
into list B[floor(nA[i])] 7 for i = 0 to n  1 8 sort list B[i] with
insertion sort 9 concatenate the lists B[0], B[1].. B[n-1] together in
order

* software-engineering/data-structures/linear-lists/array/BUCKET-SORT
